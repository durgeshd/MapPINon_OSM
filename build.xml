<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<project name="MapPIN" default="default" basedir=".">
    <description>Builds, tests, and runs the project MapPIN.</description>
    <import file="nbproject/build-impl.xml"/>
    <!--

      -pre-init:                 called before initialization of project properties
      -post-init:                called after initialization of project properties
      -pre-compile:              called before javac compilation
      -post-compile:             called after javac compilation
      -pre-compile-single:       called before javac compilation of single file
      -post-compile-single:      called after javac compilation of single file
      -pre-compile-test:         called before javac compilation of JUnit tests
      -post-compile-test:        called after javac compilation of JUnit tests
      -pre-compile-test-single:  called before javac compilation of single JUnit test
      -post-compile-test-single: called after javac compilation of single JUunit test
      -pre-jar:                  called before JAR building
      -post-jar:                 called after JAR building
      -post-clean:               called after cleaning build products

    -->
    <target name="-metaext-check">
        <echo>checking</echo>
        <mkdir dir="lib"/>
        <condition property="metaext.notexist"><not>
            <available file="${file.reference.metadata-extractor-2.3.1.jar}" property="metaext.exist" />
        </not></condition>
    </target>

    <target depends="-metaext-check" name="metaext-jar" if="metaext.notexist">
        <echo>
Now this is downloading ${file.reference.metadata-extractor-2.3.1.jar}.
metadata-extractor is public domain. You can download it without any license,
thought, please respect the author. Here is a message from his homepage,
http://www.drewnoakes.com/code/exif/ .
------------------------------------------------------------------------------
You're free to use this code as you see fit. Please send me a short email to
let me know if you find it useful. If you make interesting changes, mail me a
copy and I'll include the details on this site. The continual contact with
users and contributors of the library encourages and motivates me to keep
making improvements. The code is protected by copyright, though only to avoid
people selling it unmodified or copyrighting it themselves. You are free to
sell work based upon this library, though please consider making a donation.

I've posted javadoc. Though it's not very thoroughly annotated, it still gives
an easy way to browse the class structure and members.
    </echo>
        <get src="http://www.drewnoakes.com/code/exif/releases/metadata-extractor-2.3.1.jar"
        dest="${file.reference.metadata-extractor-2.3.1.jar}"
        description="Metadata Extractor"
        verbose="true" />
    </target>

    <target name="-flickrj-check">
        <echo>checking</echo>
        <mkdir dir="lib"/>
        <condition property="flickrj.notexist"><not>
            <available file="${file.reference.flickrapi-1.2.jar}" property="flickrj.exist"/>
        </not></condition>
    </target>

    <target depends="-flickrj-check" name="flickrj-jar" if="flickrj.notexist">
        <echo>
Go to flickrj's download page
http://sourceforge.net/projects/flickrj/files/
and download flickrapi-1.2.zip.
pickup the flickrapi-1.2.jar and put it into the ./lib/ directory.
    </echo>
    <fail description="Fail because of lack of flickrapi-1.2.jar." />
    </target>

    <target name="-edtftpj-check">
        <echo>checking existance of edtftpj.jar</echo>
        <mkdir dir="lib"/>
        <condition property="edtftpj.notexist"><not>
            <available file="${file.reference.edtftpj.jar}" property="edtftpj.exist" />
        </not></condition>
    </target>

    <target depends="-edtftpj-check" name="edtftpj-jar" if="edtftpj.notexist">
        <echo>
Go to EDTftp/j's product page
http://www.enterprisedt.com/products/edtftpj/
and download edtftpj.zip.
Pickup the edtftpj.jar from it and put it into the ./lib/ directory.
    </echo>
    <fail description="Fail because of lack of edtftpj.jar." />
    </target>

    <target name="-pre-compile" depends="metaext-jar,flickrj-jar,edtftpj-jar"/>

    <target name="-post-compile">
        <xslt in="material/en.xml" style="material/index.xsl" out="htdocs/index.html.en" />
        <xslt in="material/ja.xml" style="material/index.xsl" out="htdocs/index.html.ja" />
        <mkdir dir="htdocs/lang"/>
        <xslt in="material/en.xml" style="material/javascript.xsl" out="htdocs/lang/en.js" />
        <xslt in="material/ja.xml" style="material/javascript.xsl" out="htdocs/lang/ja.js" />
        <xslt in="material/en.xml" style="material/php.xsl" out="htdocs/lang/en.php" />
        <xslt in="material/ja.xml" style="material/php.xsl" out="htdocs/lang/ja.php" />
    </target>
</project>
